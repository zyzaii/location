<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Track Location and Find Route</title>

    <link rel="stylesheet" href="https://unpkg.com/leaflet@1.9.4/dist/leaflet.css"
     integrity="sha256-p4NxAoJBhIIN+hmNHrzRCf9tD/miZyoHS5obTRR9BMY="
     crossorigin=""/>

    <script src="https://unpkg.com/leaflet@1.9.4/dist/leaflet.js"
    integrity="sha256-20nQCchB9co0qIjJZRGuk2/Z9VM+kNiyxNV1lvTlZBo="
    crossorigin=""></script>

    <link rel="stylesheet" href="https://unpkg.com/leaflet-routing-machine@3.2.12/dist/leaflet-routing-machine.css" />
    <script src="https://unpkg.com/leaflet-routing-machine@3.2.12/dist/leaflet-routing-machine.min.js"></script>

    <style>
        #map { height: 600px; width: 100%; margin-top: 20px; }
        #search-bar { margin: 20px 0; }
    </style>
</head>
<body>
    
    <h1>Track Location and Find Route</h1>
    
    <div id="search-bar">
        <input type="text" id="destination" placeholder="Enter destination address">
        <button onclick="findRoute()">Find Route</button>
        <button onclick="startTracking()">Start Tracking</button>
    </div>

    <div id="map"></div>

</body>
<script>
    var map = L.map('map').setView([51.505, -0.09], 13); // Default map view

    L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
        maxZoom: 19,
        attribution: '&copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors'
    }).addTo(map);

    var userMarker, routingControl;

    // Function to start tracking the user's location
    function startTracking() {
        if (navigator.geolocation) {
            navigator.geolocation.watchPosition(function(position) {
                var userLat = position.coords.latitude;
                var userLon = position.coords.longitude;

                // Set the map view to the user's location and add a marker
                map.setView([userLat, userLon], 13);

                if (!userMarker) {
                    userMarker = L.marker([userLat, userLon]).addTo(map)
                        .bindPopup("Your current location")
                        .openPopup();
                } else {
                    userMarker.setLatLng([userLat, userLon]); // Update marker position
                }
            }, function() {
                alert("Geolocation permission denied or not available.");
            });
        } else {
            alert("Geolocation is not supported by this browser.");
        }
    }

    // Function to find and display the route to the destination
    function findRoute() {
        var destinationAddress = document.getElementById("destination").value;
        if (!destinationAddress) {
            alert("Please enter a destination address.");
            return;
        }

        // Geocode the destination address using Nominatim API
        fetch(`https://nominatim.openstreetmap.org/search?format=json&q=${encodeURIComponent(destinationAddress)}`)
            .then(response => response.json())
            .then(data => {
                if (data.length === 0) {
                    alert("Location not found. Please enter a valid address.");
                    return;
                }

                var destLat = parseFloat(data[0].lat);
                var destLon = parseFloat(data[0].lon);

                // Check if user location is available and route
                if (userMarker) {
                    var userLat = userMarker.getLatLng().lat;
                    var userLon = userMarker.getLatLng().lng;

                    // Remove existing route if it exists
                    if (routingControl) {
                        map.removeControl(routingControl);
                    }

                    // Add routing control to map for the new route
                    routingControl = L.Routing.control({
                        waypoints: [
                            L.latLng(userLat, userLon),      // Starting point: user's location
                            L.latLng(destLat, destLon)       // Destination
                        ],
                        routeWhileDragging: true,
                        show: true,
                        addWaypoints: false,
                        createMarker: function() { return null; }  // Hide additional markers
                    }).addTo(map);

                } else {
                    alert("Please start tracking your location first.");
                }
            })
            .catch(error => {
                console.error("Error fetching geocoding data:", error);
                alert("An error occurred while finding the location.");
            });
    }
</script>
</html>
